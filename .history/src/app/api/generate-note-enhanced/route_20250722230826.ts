// src/app/api/generate-note-enhanced/route.ts - REPLACE WITH SIMPLIFIED VERSION

import { NextRequest, NextResponse } from 'next/server';
import { addDoc, collection } from 'firebase/firestore';
import { db, COLLECTIONS } from '@/lib/firebase/config';

export async function POST(request: NextRequest) {
    try {
        const body = await request.json();
        const {
            transcript,
            patientId,
            patientName,
            templateId,
            encounterType = 'follow-up',
            userId
        } = body;

        // Validate required fields
        if (!transcript || !patientId || !userId) {
            return NextResponse.json(
                { error: 'Missing required fields: transcript, patientId, userId' },
                { status: 400 }
            );
        }

        console.log('üöÄ Enhanced API called with:', { userId, patientId, templateId });

        // Create a mock note for testing
        const mockNote = `CLINICAL NOTE - FEEDBACK SYSTEM TEST

Patient: ${patientName || 'Test Patient'}
Date: ${new Date().toLocaleDateString()}
Provider: AI Assistant (Testing Mode)
Template: ${templateId || 'General'}

CHIEF COMPLAINT:
Based on transcript analysis.

ASSESSMENT:
This is a test note generated for the AI feedback learning system. 

The system is working correctly and ready to collect your feedback to improve future note generation.

PLAN:
1. Review this generated note
2. Provide feedback using the rating system below
3. Help train the AI to generate better notes

Generated from transcript: "${transcript.substring(0, 150)}${transcript.length > 150 ? '...' : ''}"

---
ü§ñ This note was generated by the AI Medical Note Writer feedback system.
üìä Your feedback will help improve future note generation quality.`;

        const provider = 'gemini';
        const processingTime = 1500; // Mock processing time

        // Save note to database (simplified)
        const noteData = {
            patientId,
            patientName: patientName || 'Test Patient',
            templateUsed: templateId || 'general',
            generatedContent: mockNote,
            aiProvider: provider,
            processingTime,
            qualityScore: 8,
            epicElements: { smartPhrases: [], smartLists: [], wildcards: [] },
            createdBy: userId,
            createdAt: new Date(),
            exported: false,

            // Enhanced fields for feedback system
            feedbackCollected: false,
            personalizedPromptUsed: false,
        };

        console.log('üíæ Saving note to Firestore...');
        const noteDoc = await addDoc(collection(db, COLLECTIONS.NOTES), noteData);
        console.log('‚úÖ Note saved with ID:', noteDoc.id);

        // Return enhanced response
        const response = {
            success: true,
            noteId: noteDoc.id,
            content: mockNote,
            provider,
            qualityScore: 8,
            processingTime,
            epicElements: { smartPhrases: [], smartLists: [], wildcards: [] },

            // Learning metadata
            learningMetadata: {
                promptStrategy: 'baseline',
                personalizedPromptUsed: false,
                confidenceScore: 1.0,
                showFeedbackPrompt: true,
            },
        };

        console.log('üéâ Enhanced API response ready');
        return NextResponse.json(response);

    } catch (error) {
        console.error('‚ùå Enhanced note generation error:', error);

        return NextResponse.json(
            {
                error: 'Note generation failed',
                details: error instanceof Error ? error.message : 'Unknown error',
                message: 'This is a test API - check console for details'
            },
            { status: 500 }
        );
    }
}

// Health check endpoint
export async function GET() {
    return NextResponse.json({
        success: true,
        status: 'healthy',
        features: {
            feedbackCollection: true,
            enhancedLogging: true,
            mockNoteGeneration: true,
        },
        timestamp: new Date().toISOString(),
        message: 'Enhanced API is ready for testing'
    });
}